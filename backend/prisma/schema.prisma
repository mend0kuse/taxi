generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  DRIVER
}

enum Status {
  SEARCHING // Поиск водителя
  WAITING // Водитель найден - ожидание
  IN_PROGRESS // В процессе
  COMPLETED // Завершен
  CANCELED // Отменен
}

model Order {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  status  String
  address String

  clientId Int?
  client   User? @relation(fields: [clientId], references: [id], name: "client")

  driverId Int?
  driver   User? @relation(fields: [driverId], references: [id], name: "driver")

  serviceId Int?
  service   Service? @relation(fields: [serviceId], references: [id])

  review Review?

  chat Chat?
}

model User {
  id Int @id @default(autoincrement())

  email    String @unique
  role     Role
  password String
  phone    String

  service Service[]
  profile Profile?

  clientOrders Order[] @relation(name: "client")
  driverOrders Order[] @relation(name: "driver")

  messages ChatMessage[]
}

model Profile {
  id Int @id @default(autoincrement())

  userId Int?  @unique
  user   User? @relation(fields: [userId], references: [id])

  name   String?
  avatar String?
}

model Service {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  title       String
  description String
  image       String?
  price       Int

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  orders Order[]

  @@index([userId], map: "Service_userId_fkey")
}

model Chat {
  id Int @id @default(autoincrement())

  order   Order @relation(fields: [orderId], references: [id])
  orderId Int   @unique

  messages ChatMessage[]
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  message String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  chat   Chat? @relation(fields: [chatId], references: [id])
  chatId Int?
}

model Review {
  id Int @id @default(autoincrement())

  rating Int
  text   String

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int    @unique
}
